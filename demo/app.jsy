class ActionView extends Inferno.Component ::
    constructor( props ) :: super @ props

    renderBool( bool ) :: return bool ? 'true' : 'false'

    render() ::
        let conditions = Object.keys( this.props.action.conditions ).map @ key => <li><strong>{ key }</strong>: { this.renderBool( this.props.action.conditions[key] ) }</li>
        let effects = Object.keys( this.props.action.effects ).map @ key => <li><strong>{ key }</strong>: { this.renderBool( this.props.action.effects[key] ) }</li>

        return @
            <div>
              <p>Key: { this.props.action.key }</p>
              <p>Conditions:
                <ul>{ conditions }</ul>
                <ul>{ effects }</ul>
              </p>
            </div>

let exampleAction = new Planner.Action @
    'Attack'
    , @{} kWeaponIsLoaded: false
    , @{} kTargetIsDead: false

let container = document.getElementById @ 'container'
Inferno.render @ <ActionView action={ exampleAction } />, container
