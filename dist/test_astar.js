'use strict';

var AStar = require('../dist/astar.js');

var start = {
    name: 'start',
    weight: 0,
    isGoal: false,
    edges: [] };

var pathA1 = {
    name: 'A1',
    weight: 2,
    isGoal: false,
    edges: [] };

var pathA2 = {
    name: 'A2',
    weight: 10,
    isGoal: false,
    edges: [] };

var pathA3 = {
    name: 'A3',
    weight: 1,
    isGoal: false,
    edges: [] };

var pathB1 = {
    name: 'B1',
    weight: 1,
    isGoal: false,
    edges: [] };

var pathB2 = {
    name: 'B2',
    weight: 1,
    isGoal: false,
    edges: [] };

var pathB3 = {
    name: 'B3',
    weight: 12,
    isGoal: false,
    edges: [] };

var goal = {
    name: 'goal',
    weight: 0,
    isGoal: true,
    edges: [] };

start.edges = [pathA1, pathB1];
pathA1.edges = [start, pathA2];
pathA2.edges = [pathA1, pathA3, pathB2];
pathA3.edges = [pathA2, goal];
pathB1.edges = [start, pathB2];
pathB2.edges = [pathB1, pathB3, pathA2];
pathB3.edges = [pathB2, goal];
goal.edges = [pathA3, pathB3];

var heurFn = function heurFn(node, start) {
    return 1;
};
var goalFn = function goalFn(node) {
    return node.isGoal;
};
var succFn = function succFn(node) {
    return node.edges;
};
var costFn = function costFn(node) {
    return node.weight;
};

var pathfinder = new AStar(heurFn, goalFn, succFn, costFn);

console.log(pathfinder.find(start));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NvZGUvdGVzdF9hc3Rhci5qc3kiXSwibmFtZXMiOlsiQVN0YXIiLCJyZXF1aXJlIiwic3RhcnQiLCJuYW1lIiwid2VpZ2h0IiwiaXNHb2FsIiwiZWRnZXMiLCJwYXRoQTEiLCJwYXRoQTIiLCJwYXRoQTMiLCJwYXRoQjEiLCJwYXRoQjIiLCJwYXRoQjMiLCJnb2FsIiwiaGV1ckZuIiwibm9kZSIsImdvYWxGbiIsInN1Y2NGbiIsImNvc3RGbiIsInBhdGhmaW5kZXIiLCJjb25zb2xlIiwibG9nIiwiZmluZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxRQUFRQyxRQUFVLGtCQUFWLENBQWQ7O0FBRUEsSUFBSUMsUUFBUTtBQUNSQyxVQUFNLE9BREU7QUFFUkMsWUFBUSxDQUZBO0FBR1JDLFlBQVEsS0FIQTtBQUlSQyxXQUFPLEVBSkMsRUFBWjs7QUFNQSxJQUFJQyxTQUFTO0FBQ1RKLFVBQU0sSUFERztBQUVUQyxZQUFRLENBRkM7QUFHVEMsWUFBUSxLQUhDO0FBSVRDLFdBQU8sRUFKRSxFQUFiOztBQU1BLElBQUlFLFNBQVM7QUFDVEwsVUFBTSxJQURHO0FBRVRDLFlBQVEsRUFGQztBQUdUQyxZQUFRLEtBSEM7QUFJVEMsV0FBTyxFQUpFLEVBQWI7O0FBTUEsSUFBSUcsU0FBUztBQUNUTixVQUFNLElBREc7QUFFVEMsWUFBUSxDQUZDO0FBR1RDLFlBQVEsS0FIQztBQUlUQyxXQUFPLEVBSkUsRUFBYjs7QUFNQSxJQUFJSSxTQUFTO0FBQ1RQLFVBQU0sSUFERztBQUVUQyxZQUFRLENBRkM7QUFHVEMsWUFBUSxLQUhDO0FBSVRDLFdBQU8sRUFKRSxFQUFiOztBQU1BLElBQUlLLFNBQVM7QUFDVFIsVUFBTSxJQURHO0FBRVRDLFlBQVEsQ0FGQztBQUdUQyxZQUFRLEtBSEM7QUFJVEMsV0FBTyxFQUpFLEVBQWI7O0FBTUEsSUFBSU0sU0FBUztBQUNUVCxVQUFNLElBREc7QUFFVEMsWUFBUSxFQUZDO0FBR1RDLFlBQVEsS0FIQztBQUlUQyxXQUFPLEVBSkUsRUFBYjs7QUFNQSxJQUFJTyxPQUFPO0FBQ1BWLFVBQU0sTUFEQztBQUVQQyxZQUFRLENBRkQ7QUFHUEMsWUFBUSxJQUhEO0FBSVBDLFdBQU8sRUFKQSxFQUFYOztBQU1BSixNQUFNSSxLQUFOLEdBQWMsQ0FBRUMsTUFBRixFQUFVRyxNQUFWLENBQWQ7QUFDQUgsT0FBT0QsS0FBUCxHQUFlLENBQUVKLEtBQUYsRUFBU00sTUFBVCxDQUFmO0FBQ0FBLE9BQU9GLEtBQVAsR0FBZSxDQUFFQyxNQUFGLEVBQVVFLE1BQVYsRUFBa0JFLE1BQWxCLENBQWY7QUFDQUYsT0FBT0gsS0FBUCxHQUFlLENBQUVFLE1BQUYsRUFBVUssSUFBVixDQUFmO0FBQ0FILE9BQU9KLEtBQVAsR0FBZSxDQUFFSixLQUFGLEVBQVNTLE1BQVQsQ0FBZjtBQUNBQSxPQUFPTCxLQUFQLEdBQWUsQ0FBRUksTUFBRixFQUFVRSxNQUFWLEVBQWtCSixNQUFsQixDQUFmO0FBQ0FJLE9BQU9OLEtBQVAsR0FBZSxDQUFFSyxNQUFGLEVBQVVFLElBQVYsQ0FBZjtBQUNBQSxLQUFLUCxLQUFMLEdBQWEsQ0FBRUcsTUFBRixFQUFVRyxNQUFWLENBQWI7O0FBRUEsSUFBTUUsU0FBUyxTQUFUQSxNQUFTLENBQUVDLElBQUYsRUFBUWIsS0FBUjtBQUFBLFdBQW1CLENBQW5CO0FBQUEsQ0FBZjtBQUNBLElBQU1jLFNBQVMsU0FBVEEsTUFBUyxDQUFFRCxJQUFGO0FBQUEsV0FBWUEsS0FBS1YsTUFBakI7QUFBQSxDQUFmO0FBQ0EsSUFBTVksU0FBUyxTQUFUQSxNQUFTLENBQUVGLElBQUY7QUFBQSxXQUFZQSxLQUFLVCxLQUFqQjtBQUFBLENBQWY7QUFDQSxJQUFNWSxTQUFTLFNBQVRBLE1BQVMsQ0FBRUgsSUFBRjtBQUFBLFdBQVlBLEtBQUtYLE1BQWpCO0FBQUEsQ0FBZjs7QUFFQSxJQUFJZSxhQUFhLElBQUluQixLQUFKLENBQVljLE1BQVosRUFBb0JFLE1BQXBCLEVBQTRCQyxNQUE1QixFQUFvQ0MsTUFBcEMsQ0FBakI7O0FBRUFFLFFBQVFDLEdBQVIsQ0FBY0YsV0FBV0csSUFBWCxDQUFrQnBCLEtBQWxCLENBQWQiLCJmaWxlIjoidGVzdF9hc3Rhci5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFTdGFyID0gcmVxdWlyZSBAICcuLi9kaXN0L2FzdGFyLmpzJ1xuXG5sZXQgc3RhcnQgPSA6OlxuICAgIG5hbWU6ICdzdGFydCcsXG4gICAgd2VpZ2h0OiAwLFxuICAgIGlzR29hbDogZmFsc2UsXG4gICAgZWRnZXM6IFtdXG5cbmxldCBwYXRoQTEgPSA6OlxuICAgIG5hbWU6ICdBMScsXG4gICAgd2VpZ2h0OiAyLFxuICAgIGlzR29hbDogZmFsc2UsXG4gICAgZWRnZXM6IFtdXG5cbmxldCBwYXRoQTIgPSA6OlxuICAgIG5hbWU6ICdBMicsXG4gICAgd2VpZ2h0OiAxMCxcbiAgICBpc0dvYWw6IGZhbHNlLFxuICAgIGVkZ2VzOiBbXVxuXG5sZXQgcGF0aEEzID0gOjpcbiAgICBuYW1lOiAnQTMnLFxuICAgIHdlaWdodDogMSxcbiAgICBpc0dvYWw6IGZhbHNlLFxuICAgIGVkZ2VzOiBbXVxuXG5sZXQgcGF0aEIxID0gOjpcbiAgICBuYW1lOiAnQjEnLFxuICAgIHdlaWdodDogMSxcbiAgICBpc0dvYWw6IGZhbHNlLFxuICAgIGVkZ2VzOiBbXVxuXG5sZXQgcGF0aEIyID0gOjpcbiAgICBuYW1lOiAnQjInLFxuICAgIHdlaWdodDogMSxcbiAgICBpc0dvYWw6IGZhbHNlLFxuICAgIGVkZ2VzOiBbXVxuXG5sZXQgcGF0aEIzID0gOjpcbiAgICBuYW1lOiAnQjMnLFxuICAgIHdlaWdodDogMTIsXG4gICAgaXNHb2FsOiBmYWxzZSxcbiAgICBlZGdlczogW11cblxubGV0IGdvYWwgPSA6OlxuICAgIG5hbWU6ICdnb2FsJyxcbiAgICB3ZWlnaHQ6IDAsXG4gICAgaXNHb2FsOiB0cnVlLFxuICAgIGVkZ2VzOiBbXVxuXG5zdGFydC5lZGdlcyA9IFsgcGF0aEExLCBwYXRoQjEgXVxucGF0aEExLmVkZ2VzID0gWyBzdGFydCwgcGF0aEEyIF1cbnBhdGhBMi5lZGdlcyA9IFsgcGF0aEExLCBwYXRoQTMsIHBhdGhCMiBdXG5wYXRoQTMuZWRnZXMgPSBbIHBhdGhBMiwgZ29hbCBdXG5wYXRoQjEuZWRnZXMgPSBbIHN0YXJ0LCBwYXRoQjIgXVxucGF0aEIyLmVkZ2VzID0gWyBwYXRoQjEsIHBhdGhCMywgcGF0aEEyIF1cbnBhdGhCMy5lZGdlcyA9IFsgcGF0aEIyLCBnb2FsIF1cbmdvYWwuZWRnZXMgPSBbIHBhdGhBMywgcGF0aEIzIF1cblxuY29uc3QgaGV1ckZuID0gKCBub2RlLCBzdGFydCApID0+IDFcbmNvbnN0IGdvYWxGbiA9ICggbm9kZSApID0+IG5vZGUuaXNHb2FsXG5jb25zdCBzdWNjRm4gPSAoIG5vZGUgKSA9PiBub2RlLmVkZ2VzXG5jb25zdCBjb3N0Rm4gPSAoIG5vZGUgKSA9PiBub2RlLndlaWdodFxuXG5sZXQgcGF0aGZpbmRlciA9IG5ldyBBU3RhciBAIGhldXJGbiwgZ29hbEZuLCBzdWNjRm4sIGNvc3RGblxuXG5jb25zb2xlLmxvZyBAIHBhdGhmaW5kZXIuZmluZCBAIHN0YXJ0XG4iXX0=